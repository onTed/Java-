标记清除算法--统一标记完成后清除。它存在两个问题：1效率问题；2空间问题--产生很多不连续的内存碎片，
如果有一个很大的对象需要连续空间而不得不触发另一次垃圾收集动作。

复制算法--将内存分成两块，一块工作，一块闲置，进行垃圾回收时，将工作区的存活的对象复制到闲置区，然
后清空工作区。这种实现简单，运行高效。现在商业虚拟机都用复制算法回收新生代。HotSpot中回收新生代的
内存分为Eden,From survivor，To survivor(8:1:1)。每次使用Eden和其中一块survivor，回收时将Eden和
这块survivor中存活的对象复制到另一块survivor中。如果To survivor的内存空间不够，则需要依靠老年代进
行内存担保。

标记整理算法--标记过程与标记清除算法的标记过程一样，后续过程不是直接对可回收对象进行清理，而是让所有
存活的对象向一端移动，然后直接清理掉端边界以外的内存。

一般是把Java堆分为新生代和老年代。
